Insights
Improve image delivery Est savings of 118 KiB
Reducing the download time of images can improve the perceived load time of the page and LCP. Learn more about optimizing image sizeLCPFCP
URL
Resource Size
Est Savings
infoworldcup.wiki 1st party
138.6 KiB	117.6 KiB
/images/logo.webp(infoworldcup.wiki)
56.2 KiB
55.2 KiB
Increasing the image compression factor could improve this image's download size.
36.0 KiB
This image file is larger than it needs to be (540x229) for its displayed dimensions (120x51). Use responsive images to reduce the image download size.
53.4 KiB
/images/wc2026.webp(infoworldcup.wiki)
50.1 KiB
37.1 KiB
This image file is larger than it needs to be (810x810) for its displayed dimensions (412x412). Use responsive images to reduce the image download size.
37.1 KiB
/images/info-fifa.webp(infoworldcup.wiki)
32.3 KiB
25.3 KiB
This image file is larger than it needs to be (675x675) for its displayed dimensions (314x314). Use responsive images to reduce the image download size.
25.3 KiB
Render blocking requests Est savings of 450 ms
Requests are blocking the page's initial render, which may delay LCP. Deferring or inlining can move these network requests out of the critical path.LCPFCP
URL
Transfer Size
Duration
infoworldcup.wiki 1st party
5.4 KiB	180 ms
…css/1b78dfab45859ec7.css(infoworldcup.wiki)
5.4 KiB
180 ms
Legacy JavaScript Est savings of 11 KiB
Polyfills and transforms enable older browsers to use new JavaScript features. However, many aren't necessary for modern browsers. Consider modifying your JavaScript build process to not transpile Baseline features, unless you know you must support older browsers. Learn why most sites can deploy ES6+ code without transpilingLCPFCP
URL
Wasted bytes
infoworldcup.wiki 1st party
11.2 KiB
…chunks/23-ab73e897…f.js(infoworldcup.wiki)
11.2 KiB
…chunks/23-ab73e897…f.js:1:1272(infoworldcup.wiki)
Array.prototype.at
…chunks/23-ab73e897…f.js:1:660(infoworldcup.wiki)
Array.prototype.flat
…chunks/23-ab73e897…f.js:1:773(infoworldcup.wiki)
Array.prototype.flatMap
…chunks/23-ab73e897…f.js:1:1149(infoworldcup.wiki)
Object.fromEntries
…chunks/23-ab73e897…f.js:1:1407(infoworldcup.wiki)
Object.hasOwn
…chunks/23-ab73e897…f.js:1:402(infoworldcup.wiki)
String.prototype.trimEnd
…chunks/23-ab73e897…f.js:1:317(infoworldcup.wiki)
String.prototype.trimStart
Network dependency tree
Avoid chaining critical requests by reducing the length of chains, reducing the download size of resources, or deferring the download of unnecessary resources to improve page load.LCP
Maximum critical path latency: 740 ms
Initial Navigation
https://infoworldcup.wiki - 141 ms, 7.42 KiB
…css/1b78dfab45859ec7.css(infoworldcup.wiki) - 425 ms, 5.35 KiB
…media/eafabf029ad39a43-s.p.woff2(infoworldcup.wiki) - 685 ms, 8.48 KiB
…media/048…a97172-s.p.woff2(infoworldcup.wiki) - 740 ms, 8.56 KiB
…media/b957ea75a84b6ea7-s.p.woff2(infoworldcup.wiki) - 690 ms, 8.43 KiB
Preconnected origins
preconnect hints help the browser establish a connection earlier in the page load, saving time when the first request for that origin is made. The following are the origins that the page preconnected to.
no origins were preconnected
Preconnect candidates
Add preconnect hints to your most important origins, but try to use no more than 4.
No additional origins are good candidates for preconnecting
Use efficient cache lifetimes Est savings of 3 KiB
LCP breakdown
3rd parties
These insights are also available in the Chrome DevTools Performance Panel - record a trace to view more detailed information.
Diagnostics
Avoid serving legacy JavaScript to modern browsers Est savings of 11 KiB
Polyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren't necessary for modern browsers. Consider modifying your JavaScript build process to not transpile Baseline features, unless you know you must support legacy browsers. Learn why most sites can deploy ES6+ code without transpilingLCPFCP
URL
Est Savings
infoworldcup.wiki 1st party
10.9 KiB
…chunks/23-ab73e897…f.js(infoworldcup.wiki)
10.9 KiB
…chunks/23-ab73e897…f.js:1:1272(infoworldcup.wiki)
Array.prototype.at
…chunks/23-ab73e897…f.js:1:660(infoworldcup.wiki)
Array.prototype.flat
…chunks/23-ab73e897…f.js:1:773(infoworldcup.wiki)
Array.prototype.flatMap
…chunks/23-ab73e897…f.js:1:1149(infoworldcup.wiki)
Object.fromEntries
…chunks/23-ab73e897…f.js:1:1407(infoworldcup.wiki)
Object.hasOwn
…chunks/23-ab73e897…f.js:1:402(infoworldcup.wiki)
String.prototype.trimEnd
…chunks/23-ab73e897…f.js:1:317(infoworldcup.wiki)
String.prototype.trimStart
More information about the performance of your application. These numbers don't directly affect the Performance score.
Passed audits (22)
Show
95
Accessibility
These checks highlight opportunities to improve the accessibility of your web app. Automatic detection can only detect a subset of issues and does not guarantee the accessibility of your web app, so manual testing is also encouraged.
Names and labels
Buttons do not have an accessible name
When a button doesn't have an accessible name, screen readers announce it as "button", making it unusable for users who rely on screen readers. Learn how to make buttons more accessible.
Failing Elements
nav.fixed > div.container > div.md:hidden > button.p-2
<button class="p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-inset focus:ring…">
These are opportunities to improve the semantics of the controls in your application. This may enhance the experience for users of assistive technology, like a screen reader.